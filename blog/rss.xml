<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>겟차 프론트엔드 팀입니다 Blog</title>
        <link>https://your-docusaurus-test-site.com/getcha_frontend_docs/blog</link>
        <description>겟차 프론트엔드 팀입니다 Blog</description>
        <lastBuildDate>Sun, 24 Apr 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[도큐사우루스를 활용한 겟차 프론트엔드 팀 사이트 만들기]]></title>
            <link>https://your-docusaurus-test-site.com/getcha_frontend_docs/blog/team-blog</link>
            <guid>team-blog</guid>
            <pubDate>Sun, 24 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[안녕하세요. Getcha 팀 FrontEnd 개발자 Nick입니다. 오늘은 페이스북의 정적 문서 생성 프레임워크인 도큐사우르스를 활용한 겟차 프론트엔드 팀 웹사이트 빌딩 과정을 소개하겠습니다.]]></description>
            <content:encoded><![CDATA[<p>안녕하세요. Getcha 팀 FrontEnd 개발자 <strong>Nick</strong>입니다. 오늘은 페이스북의 정적 문서 생성 프레임워크인 도큐사우르스를 활용한 겟차 프론트엔드 팀 웹사이트 빌딩 과정을 소개하겠습니다.</p><p>저희 프론트엔드 팀은 이미 엄청나게 커진 겟차의 메인 <strong>서비스 프로젝트 크기를 줄이는 목적</strong>을 가진 리팩토링의 일환으로 <em>컴포넌트 라이브러리</em>를 만들기로 하고, 이 라이브러리의 설명 문서 또한 제작하기로 했습니다. 그러다가, 아예 만들거면 범용성 있게 만들자 하고 다음의 <strong>목적</strong>들을 달성할 수 있는 사이트를 만들기로 했습니다.</p><ol><li>Getcha FrontEnd Team 소개 (<strong>개발자님들 많이 지원해주세요 !!</strong> 😆😆)</li><li>Ghetcha Components Library Docs</li><li>FrontEnd Tech Blog</li></ol><p>처음엔 개츠비나 깃북같은 유명한 정적 문서 생성 프레임워크들을 생각했습니다. 아예 블로그를 시작부터 빌딩할 수준의 크기라고 생각해서였어요. 하지만 개발 리소스는 서비스 유지를 하기에도 바빴기 때문에 개발비용을 최소화해서 이런 수준의 사이트를 만들 수 있는 프레임워크인 <strong>도큐사우루스</strong>를 활용하기로 결정했습니다.</p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="도큐사우루스란">도큐사우루스란?<a class="hash-link" href="#도큐사우루스란" title="Direct link to heading">​</a></h2><p>도큐사우루스는 facebook에서 개발한 React 기반 <strong>정적 페이지 프레임워크</strong>입니다.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>도큐사우루스 방문하기</h5></div><div class="admonition-content"><p>💡 <a href="https://docusaurus.io/ko/" target="_blank" rel="noopener noreferrer">도큐사우루스</a> 공식 홈페이지</p></div></div><p>도큐사우루스의 목적은 정말 심플하고 강력합니다. 아래 사진은 도큐사우루스 메인페이지에 나온 슬로건인데요. 이 한 문장 안에 도큐사우루스의 모든게 담겨있다고 볼 수 있습니다.</p><p><img loading="lazy" alt="스크린샷 2022-04-23 오후 7.52.57.png" src="/getcha_frontend_docs/assets/images/docusaurus-slog-ab417ecbfa7ce257bc9abf2670d78ba0.png" width="2202" height="438" class="img_E7b_"></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="특징">특징<a class="hash-link" href="#특징" title="Direct link to heading">​</a></h3><p>도큐사우루스는 개츠비와 같이 이미 자주 사용되던 정적 페이지 생성기들과 다른 몇가지 특징이 있습니다.</p><ol><li><p>콘텐츠만 신경써도 될 정도로 간단하다.</p><p>간단히 프로젝트만 만들어도, 당장 사용해도 될 만큼 <strong>완성도 높은</strong> 사이트가 나오고, <strong>커스터마이징</strong>도 간단합니다.
검색이나 다크모드 같이 없으면 불편한 기능들이 전부 기본으로 제공됩니다.</p></li><li><p>폴더 구조가 직관적이고 단순하다.</p><p>하나의 상단 탭이 하나의 폴더이고, 그 하위에 모든 .md 파일이 위치하는 구조입니다.
페이지 구성이 폴더 구조와 비슷해서 관리하기 용이합니다.</p></li><li><p>마크다운 특성 상 <strong>에디터</strong> 구하기가 쉽다.</p><p>예를 들어 이 글도 노션으로 작성하여 복사 &amp; 붙혀넣기 만으로 만들어졌으며 따로 에디터를 구현하지 않아도 서식을 가져올 수 있어서 매우 편합니다. 타이포라나 노션, 컨플루언스 등등 MarkDown이 적용된 모든 에디터에서 복사해오면 빠르게 퍼블리싱 가능합니다. 또한 mdx (markdown + jsx)도 지원해서 javaScript 문법을 .md파일에서 사용 가능하다.</p></li></ol><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>마지막 특징</h5></div><div class="admonition-content"><p>!! 4. (마스코트 공룡🦖이 <strong>매우</strong> 귀엽다)</p></div></div><p>물론 장점만 있는 것은 아닙니다. 마크다운 특성 상 글자 색 기능 같은 대부분의 블로그에서 지원하는 서식을 지원하지 않고, 모든 에디터에서 동일한 서식을 사용하는것도 아닙니다 (MD 자체로는 한계가 있습니다)</p><p>그럼에도 도큐사우루스에서는 그런 단점들을 상쇄할만한 장점들이 있습니다. 저는 처음 사용해보고 느낀점은 거의 모든 틀이 정해져있고 저희는 정말 콘텐츠만 넣어서 빌드하면 완벽한 웹사이트가 나오는 느낌이었습니다. 리액트 기반 프레임워크다보니 커스터마이징도 매우 쉽다는 장점도 있었구요.</p><p>이제 프로젝트 생성부터 진행해보겠습니다.</p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="프로젝트-생성하기">프로젝트 생성하기<a class="hash-link" href="#프로젝트-생성하기" title="Direct link to heading">​</a></h2><p>먼저 준비할 것은 <strong><em>14</em></strong> 버전 이상의 Node.js입니다.</p><p>터미널을 열고, 다음 명령어를 입력해줍니다.</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">npx create-docusaurus@latest my-website classic --typescript</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>도큐사우루스 <strong>최신버전</strong>(2.xx beta)으로 my-website라는 <strong>이름의 프로젝트</strong>를, <strong>classic</strong> 플러그인(도큐사우루스 권장 플러그인)과 <strong>타입스크립트</strong> 버전으로 생성하는 명령어입니다.</p><p><img loading="lazy" alt="스크린샷 2022-04-22 오후 10.32.01.png" src="/getcha_frontend_docs/assets/images/create-docusaurus-e08bf0ba2abccdc3bbd7ed73f219d795.png" width="1288" height="616" class="img_E7b_"></p><p>잘 생성되었으면 해당 프로젝트로 들어가서, 다음 명령어를 통해 프로젝트를 실행시킵니다.</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> start</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>그리고 결과물을 확인하면 아래 사진과 같습니다.</p><p><img loading="lazy" alt="짠" src="/getcha_frontend_docs/assets/images/docusaurus-done-04d70e37f6bae10ea8bf154ae6ac0eb3.png" width="3248" height="2112" class="img_E7b_"></p><p>보이는 것 처럼 시작부터 거의 완성된 도큐먼트 친화적인 홈페이지가 나옵니다. 👍🏻</p><hr><h3 class="anchor anchorWithStickyNavbar_mojV" id="docusaurusconfigjs">docusaurus.config.js<a class="hash-link" href="#docusaurusconfigjs" title="Direct link to heading">​</a></h3><p>docusaurus.config.js는 이 프로젝트의 설정이 담긴, 이 프로젝트 폴더에서 가장 중요한 파일입니다. 헤더나 탭, 푸터 구성 및 전체 테마, 플러그인 등 이 프로젝트에서 쓰이는 모든 설정을 이 파일에서 합니다.</p><p><img loading="lazy" alt="docusaurus.config.js" src="/getcha_frontend_docs/assets/images/config-fbe7d7b6671a87ea847cf2cceadb29dc.png" width="807" height="646" class="img_E7b_"></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="커스터마이징">커스터마이징<a class="hash-link" href="#커스터마이징" title="Direct link to heading">​</a></h3><p>위에서 설명한 docusaurus.config.js에서 간단히 테마와 글로벌 스타일 등을 변경하면, 다음과 같이 잘 만들어진 팀 블로그같은 사이트가 만들어집니다.</p><p><img loading="lazy" alt="after customizing" src="/getcha_frontend_docs/assets/images/after-custom-baa26374f42058fe07d3f3233d09fbe6.png" width="2980" height="1516" class="img_E7b_"></p><p>이로써 원했던 모습의 사이트가 완성되었습니다. 물론 디자이너님에게 부탁드려서 더 이쁘게 꾸며달라고 요청해야겠지만, 일단은 기능은 하니까. 목적은 달성입니다.</p><p>이제 글을 쓰러 가봅시다.</p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="문서">문서<a class="hash-link" href="#문서" title="Direct link to heading">​</a></h2><p>도큐사우루스에서 문서는 두가지 타입으로 구성되어 있고, 각각 커스터마이징 하는 방법이 약간 다릅니다.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="1-docs">1. Docs<a class="hash-link" href="#1-docs" title="Direct link to heading">​</a></h3><p><img loading="lazy" alt="스크린샷 2022-04-23 오후 12.29.04.png" src="/getcha_frontend_docs/assets/images/docs-659779483f42b951f7ad6d9ba0a1f1a8.png" width="2674" height="1632" class="img_E7b_"></p><p>Docs는 전형적인 Document입니다. .md파일로 작성되어 있고, 위에서 언급했듯이 노션이나 타이포라같은 편집기로 편하게 작성한 뒤 복사&amp;붙혀넣기로 손쉽게 게시글을 작성할 수 있습니다.</p><p>작성된 글은 좌측 사이드바에서 네비게이팅 가능하고, 우측에서는 Heading type단위로 목차가 만들어집니다.</p><p>아래 좌우 페이지네이션도 제공합니다.</p><hr><h3 class="anchor anchorWithStickyNavbar_mojV" id="2-blog">2. Blog<a class="hash-link" href="#2-blog" title="Direct link to heading">​</a></h3><p>블로그 기능도 페이지마다 .md파일로 렌더링된다는 점에서 비슷하고 좌우 네비게이팅이나 인덱스가 만들어진다는 점에서도 Docs와 비슷합니다.</p><p><img loading="lazy" alt="스크린샷 2022-04-23 오후 12.31.15.png" src="/getcha_frontend_docs/assets/images/blog-d264a704344db016380e8390f0ca5b1e.png" width="2560" height="1430" class="img_E7b_"></p><p>아래의 기능들은 블로그에만 있는 기능들로 이마저도 개발이 필요없는 수준으로 제공되고 있습니다.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="작성자--태그-기능">작성자 &amp; 태그 기능<a class="hash-link" href="#작성자--태그-기능" title="Direct link to heading">​</a></h3><p>author를 .yml config파일로 관리합니다. 물론 이 문서 내에서 관리되지 않는 사람도 프로필을 등록할 수 있지만 이 파일에서 관리되고 있는 사람은 Key 값으로 간단히 사람 정보를 가져올 수 있습니다.</p><p><img loading="lazy" alt="스크린샷 2022-04-23 오후 8.35.48.png" src="/getcha_frontend_docs/assets/images/authors-127700ffb435b7aef1c9fa1a04d4fcb7.png" width="538" height="421" class="img_E7b_"></p><p>아래는 블로그 게시글 작성 파일인데 authors에서 Key값으로 간단하게 저자 정보를 가져오는 것을 볼 수 있습니다.</p><p><img loading="lazy" alt="스크린샷 2022-04-23 오후 8.36.59.png" src="/getcha_frontend_docs/assets/images/createTag-8ba20c3165109451b37cd822df9d54bc.png" width="652" height="341" class="img_E7b_"></p><p><img loading="lazy" alt="스크린샷 2022-04-23 오후 8.34.58.png" src="/getcha_frontend_docs/assets/images/author-component-dec0da59a2b55f932a1e4a26b9bea9b2.png" width="1462" height="214" class="img_E7b_"></p><p>또한 위 사진에서 tag array를 받는데, 나중에 해당 태그를 가진 게시글들만 모아서 볼 수 있는 기능도 제공합니다.</p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="한계점">한계점<a class="hash-link" href="#한계점" title="Direct link to heading">​</a></h2><ul><li><p>글을 작성하는게 그렇게 쉽지만은 않습니다. 비교대상이 다른 블로그 게시글 에디터이다 보니 그런 것 같습니다.</p></li><li><p>저는 특히 노션으로 작성한 뒤 옮기고 있는데, 노션엔 있는데 마크다운으로 지원하지 않는 서식이 있을 땐 그냥 나와버립니다. 이런 부분들은 일일이 찾아서 고쳐줘야 합니다.</p></li><li><p>특히 사진의 경우, 노션은 Signed URL이라는 S3 기능을 사용하는데 버킷에 사진을 등록하고 하루가 지나면 그 url은 사용할 수 없게 만듭니다. 다음 날은 다른 url이 되버려요.</p></li><li><p>그래서 저는 static asset들을 폴더에 넣어서 관리하다보니 시간이 지날수록 프로젝트 크기가 커지는 것을 느꼈습니다. 만약 활용하게 된다면 사진은 파일서버에 따로 올려두고 url을 받아다 쓰거나 Svg 변환기를 활용하는 수 밖에 없을 것 같습니다.</p></li></ul><p>감사합니다.</p>]]></content:encoded>
            <category>blog</category>
        </item>
        <item>
            <title><![CDATA[React Native Draggable Picker 만들기]]></title>
            <link>https://your-docusaurus-test-site.com/getcha_frontend_docs/blog/Draggable Picker 만들기</link>
            <guid>Draggable Picker 만들기</guid>
            <pubDate>Sat, 23 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[안녕하세요 Getcha Frontend 개발자 Nick입니다.]]></description>
            <content:encoded><![CDATA[<p>안녕하세요 Getcha Frontend 개발자 Nick입니다.
오늘은 Draggable Picker 개발기를 소개하겠습니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="draggable-picker란">Draggable Picker란?<a class="hash-link" href="#draggable-picker란" title="Direct link to heading">​</a></h2><p><img loading="lazy" alt="draggable" src="/getcha_frontend_docs/assets/images/draggable-06331dda8e57eef39274dffca3cb4805.gif" width="600" height="465" class="img_E7b_"></p><p>다음 사진들과 같이 여러개의 선택지 중 하나를 선택하도록 하는 UI입니다.</p><p><img loading="lazy" alt="draggable_ios" src="/getcha_frontend_docs/assets/images/picker_ios-80dd0b69bf2c7785eceb483653d0b354.png" width="570" height="524" class="img_E7b_"></p><p><img loading="lazy" alt="draggable_android" src="/getcha_frontend_docs/assets/images/picker_android-b892f68de98ecc05dab4dc37f56163a4.gif" width="420" height="747" class="img_E7b_"></p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="왜-만들었느냐">왜 만들었느냐<a class="hash-link" href="#왜-만들었느냐" title="Direct link to heading">​</a></h2><p>네 저도 라이브러리 가져다 쓰고 싶었습니다.
이와 같은 UI를 요구 받았을 때 당연히 누가 만들어놨겠지 하고 찾아봤는데, 없습니다. 저 위에 두가지 Picker가 제가 알기로 각각 Native Platform에서 제공하는 공식 Picker들이라서 React Native에서 당연히 기본 제공할 줄 알았는데 제공하지 않았습니다.</p><p><img loading="lazy" alt="공식홈피에서 제공하는 picker는 이미 샤따를 내린 후였다." src="/getcha_frontend_docs/assets/images/rn_picker-a219be283229dad5fdc3ccb14fc1de22.png" width="1986" height="808" class="img_E7b_">
공식홈피에서 제공하는 picker는 이미 샤따를 내린 후였다...</p><p>저기에 community packages를 눌러서 가보면 다양한 Picker 패키지들이 있지만 다 이상한 모양이었습니다. 제가 원하던게 없었습니다.</p><p>하지만 만약 있었다고 한들 디자인이 달랐을 수도 있고 저희 팀에서 사용하는 Primary Color나 Font등을 입힐 수 없다는 점과 Picker의 디자인이 안드로이드와 IOS가 너무 차이가 나서 이 경험을 하나로 통일시켜줄 UI가 필요했습니다. 그래서 직접 제작해보기로 했습니다.</p><p>간단히 FlatList 컴포넌트를 활용하면 비슷하게 나오지 않을까 하는 생각에 아래와 같은 방식으로 시도해보았습니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="코드">코드<a class="hash-link" href="#코드" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_I0IT language-tsx theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-tsx codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> useState</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> useRef </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">View</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">Text</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">FlatList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">TouchableOpacity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">NativeSyntheticEvent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">NativeScrollEvent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react-native"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name maybe-class-name">SliderPickerProps</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  suffix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  index</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">SliderPicker</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">props</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">SliderPickerProps</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> suffix </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> props</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ref </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">useRef</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name maybe-class-name">FlatList</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">focusIndex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setFocusIndex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">renderItem</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> item</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> index </span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> item</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> index</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">TouchableOpacity</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">onPress</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          ref</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript" style="color:#00009f">current</span><span class="token tag script language-javascript operator" style="color:#393A34">?.</span><span class="token tag script language-javascript function" style="color:#d73a49">scrollToOffset</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> offset</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">40</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript operator" style="color:#393A34">*</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript" style="color:#00009f">index </span><span class="token tag script language-javascript operator" style="color:#393A34">-</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">2</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          height</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">40</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          alignItems</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"center"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          justifyContent</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"center"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> color</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> index </span><span class="token tag script language-javascript operator" style="color:#393A34">===</span><span class="token tag script language-javascript" style="color:#00009f"> focusIndex </span><span class="token tag script language-javascript operator" style="color:#393A34">?</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"#0038ff"</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"#aaa"</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">item</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">TouchableOpacity</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">onScrollAndEnd</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">NativeSyntheticEvent</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">NativeScrollEvent</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Offset : "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nativeEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">contentOffset</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">setFocusIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token known-class-name class-name">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nativeEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">contentOffset</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">40</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        backgroundColor</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"#fff"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        height</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">200</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        flex</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        flexDirection</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"row"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        alignItems</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"center"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">      </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">FlatList</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">ref</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">ref</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">showsVerticalScrollIndicator</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript boolean" style="color:#36acaa">false</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">data</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">[</span><span class="token tag script language-javascript keyword nil" style="color:#00009f">undefined</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript keyword nil" style="color:#00009f">undefined</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript operator" style="color:#393A34">...</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript keyword nil" style="color:#00009f">undefined</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript keyword nil" style="color:#00009f">undefined</span><span class="token tag script language-javascript punctuation" style="color:#393A34">]</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">renderItem</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">renderItem</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">keyExtractor</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript" style="color:#00009f">item</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> index</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> index</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript function" style="color:#d73a49">toString</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">snapToAlignment</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">center</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">snapToStart</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript boolean" style="color:#36acaa">true</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">snapToInterval</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript number" style="color:#36acaa">40</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">bounces</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript boolean" style="color:#36acaa">false</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">onScroll</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">onScrollAndEnd</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">onScrollEndDrag</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">onScrollAndEnd</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag attr-name" style="color:#00a4db">getItemLayout</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript" style="color:#00009f">data</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"> index</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          length</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">40</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          offset</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">40</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript operator" style="color:#393A34">*</span><span class="token tag script language-javascript" style="color:#00009f"> index</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          index</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">suffix</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">SliderPicker</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>핵심 아이디어는가 다음과 같았습니다.</p><ul><li>보여지는 아이템 숫자를 5개로 제한한다.</li><li>아이템의 앞 뒤로 2개씩 undefind 아이템을 넣어준다(이건 선택 할 수 없음!)</li><li>focusIndex라는 값을 세팅한다</li></ul><p>여기서 focusIndex는 FlatList를 스크롤함에 따라 맨 윗부분과 컨텐츠 간의 차이인 y offset을 개별 아이템의 컨테이너 사이즈인 40으로 나눈 값을 반올림한 뒤 2를 더해서 항상 2번 index를 가리키도록 만들었습니다.</p><p>밑에 suffix는 년, 월, 라운드 등 뒤에 단위를 붙혀줄 때 사용했습니다. 범용성을 더하기 위해서.</p><p>현재 상태는 데이터를 조작할 수 없는데, 데이터는 부모 View에서 State로 관리해주면 되니까 별 문제 없다고 생각했습다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="끝으로">끝으로<a class="hash-link" href="#끝으로" title="Direct link to heading">​</a></h2><p>이 컴포넌트는 생각보다 동작을 잘 해서 범용성을 조금 더해 npm 라이브러리로 배포해볼 생각입니다.
배포된다면 배포 과정을 담은 포스트로 다시 돌아오겠습니다.</p><p>감사합니다.</p>]]></content:encoded>
            <category>react-native</category>
        </item>
        <item>
            <title><![CDATA[javaScript Event Loop의 원리]]></title>
            <link>https://your-docusaurus-test-site.com/getcha_frontend_docs/blog/event-loop</link>
            <guid>event-loop</guid>
            <pubDate>Sat, 23 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[👉 이 링크를 번역했습니다.]]></description>
            <content:encoded><![CDATA[<div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>👉 <a href="https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif" target="_blank" rel="noopener noreferrer">이 링크</a>를 번역했습니다.</p></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="️-javascript-엔진-원리-시각화-1-event-loop">✨♻️ JavaScript 엔진 원리 시각화 1. Event Loop<a class="hash-link" href="#️-javascript-엔진-원리-시각화-1-event-loop" title="Direct link to heading">​</a></h2><p>Event Loop는 모든 JavaScript 개발자들이 한번쯤은 알고 넘어가야 하는개념입니다. 하지만 막상 처음 보면 이해하기 너무 어려워요. 그래서 gif로 간단히 설명해드리겠습니다.</p><aside>👉 우선 가장 먼저, Event Loop란 무엇이고, 우리가 왜 알아야 하는건가요?</aside><p>JavaScript는 single-threaded입니다. 어떤 시점에 단 하나의 task만 처리 가능하죠. 하지만 컴퓨터는 매우 빨라서 task 하나 처리하는데 찰나의 순간밖에 걸리지 않습니다. 그래서 이건 대부분의 경우 별로 중요한 개념이 아니라고 생각하는 사람이 많아요.</p><p>하지만 하나의 task가 30초씩 걸린다면 어떨까요? 사용자는 그 30초를 손놓고 기다려야 합니다. 웹페이지에서 JavaScript Engine은 브라우저가 돌리기 때문에 그 30초가 지나기 전에 우리는 아무것도 볼 수 없는 상태가 되죠. 아무도 이런 웹사이트는 원하지 않습니다😇</p><p>다행히도 브라우저가 제공하는 몇몇 기능들로 이런 문제를 해결할 수 있습니다. 그 중 하나가 바로 Web API입니다. Web API는 setTimeout, HTTP request와 같은 DOM API를 포함합니다. 이것이 async하고 non-blocking한 동작을 가능하게 해줍니다</p><hr><p>우리가 함수를 하나 실행한다고 가정해봅시다. 그 함수는 call stack이라는 곳에 쌓입니다. call stack은 browser 가 아니라 JavaScript Engine의 일부분이에요. stack은 다들 알다시피 FILO 구조입니다(먼저 들어온 데이터가 나중에 나간다) 함수가 값을 리턴하고 나면, 그 함수는 call stack에서 사라집니다 👋 (<code>pop</code>됩니다)</p><p>아래 예시를 함께 볼게요.</p><ol><li>먼저 greet함수가 call stack에 들어왔다가 undefined를 리턴하고 pop됩니다. 다음으로 respond가 call stack에 쌓입니다. 그림의 오른쪽을 보면, <code>respond</code>라는 함수는 <code>setTimeouts</code>을 리턴합니다. 그런데 같은 함수인 이 setTimeout은 call stack이 아니라 Web API에 의해 다뤄집니다. 그 이유는 Web API의 역할이 setTimeout같이 시간이 오래걸리는 함수를 main thread가 막히지 않도록 따로 처리하는 것이기 때문입니다.</li></ol><p><img loading="lazy" src="https://res.cloudinary.com/practicaldev/image/fetch/s--44yasyNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gid1.6.gif" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--44yasyNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gid1.6.gif" class="img_E7b_"></p><ol><li>그래서 아래 그림처럼, <code>setTimeout</code>의 callback인 <code>()⇒{return 'Hey'}</code>이 Web API로 이동합니다. 이와 동시에 call Stack에서는 <code>response()</code> 함수가 pop되어 사라집니다. 두 함수(<code>response()</code>, <code>setTimeout</code>)모두 어떤걸 리턴했으니 사라지는 것이지요.</li></ol><p><img loading="lazy" src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_n4m4HH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif2.1.gif" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--d_n4m4HH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif2.1.gif" class="img_E7b_"></p><ol><li>한편, setTimeout 함수의 콜백이 넘어간 Web API에서는 콜백과 함께 넘긴 시간값만큼 타이머가 동작합니다. 여기선 1s(1000ms) 겠네요? 1초의 시간이 흐르면 당연히 call stack으로 넘어가서 실행이 될 것으로 추측할 수 있지만 현실은 그렇지 않습니다. 아래 그림과 같이, call stack 대신에 queue라는 공간으로 넘어갑니다.</li></ol><p><img loading="lazy" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MewGMdte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif3.1.gif" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--MewGMdte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif3.1.gif" class="img_E7b_"></p><p>이 부분에서 햇갈릴 수 있습니다. 콜백함수는 곧바로 callStack으로 이동하는게 아닙니다. queue는 FIFO인 자료구조로서 queue에 쌓인 순서대로 값을 리턴할 준비를 하고 있습니다.</p><ol><li>이 부분이 이번 Event Loop 파트의 핵심입니다. Event Loop는 Queue와 Call Stack을 연결해주는 역할을 합니다. call stack이 비어있다면, 즉 모든 call stack이pop된 상태가 되면 queue의 첫번째 아이템이 call stack에 쌓입니다. 이 경우는 다른 함수는 호출되지 않고, 콜백 함수가 queue의 첫번째 아이템인 시점에 call stack이 empty라는 뜻입니다.</li></ol><p><img loading="lazy" src="https://res.cloudinary.com/practicaldev/image/fetch/s--b2BtLfdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif4.gif" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--b2BtLfdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif4.gif" class="img_E7b_"></p><ol><li>마지막 단계입니다. 콜백 함수는 call stack에 쌓입니다. 그리고 "Hey"라는 값을 리턴한 후 call stack에서 pop되죠.</li></ol><p><img loading="lazy" src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYOknEYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif5.gif" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--NYOknEYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif5.gif" class="img_E7b_"></p><hr><p>위의 설명은 재미있게 읽었을지라도 실제 코드에서 어떻게 동작하는지 명확하지 않을 수 있어 아래 예시를 준비했습니다. 콘솔에 어떤 로그가 찍히는지 맞춰보세요.</p><div class="codeBlockContainer_I0IT language-tsx theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-tsx codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 선언부</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">foo</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"First"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">bar</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Second"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">baz</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Third"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 실행부</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">bar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">foo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">baz</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>이해 되셨나요? 이 코드를 브라우져 상에서 돌렸을 때 어떤 일이 일어나는지 확인해보겠습니다.</p><p><img loading="lazy" src="https://res.cloudinary.com/practicaldev/image/fetch/s--BLtCLQcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif14.1.gif" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--BLtCLQcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://devtolydiahallie.s3-us-west-1.amazonaws.com/gif14.1.gif" class="img_E7b_"></p><ol><li>먼저, bar를 호출합니다.&nbsp;<code>bar</code>&nbsp;는&nbsp;<code>setTimeout</code>함수를 리턴합니다.</li><li><code>setTimeout</code>&nbsp;에 넘긴 콜백이 Web API로 이동합니다,&nbsp;<code>setTimeout</code>&nbsp;함수와&nbsp;<code>bar</code>&nbsp;는 call stack에서 pop됩니다.</li><li>0.5초의 타이머가 돌고, 동시에 <code>foo</code>&nbsp;가 호출되고&nbsp;<code>First</code>를 콘솔에 출력하고 pop됩니다. 이 때, &nbsp;<code>foo</code>&nbsp;는 리턴값이 없으므로 undefined를 리턴하고 pop됩니다. 뒤이어 <code>baz</code>&nbsp;가 호출되며 똑같이 pop됩니다. 이 즈음에 Web API에 있던 timeout callback은 queue로 이동합니다.</li><li><code>baz</code>&nbsp;가&nbsp;<code>Third</code> 를 콘솔에 찍고 pop됩니다. 마침내 call stack이 비었습니다. Event Loop는 call stack이 비어있는것을 확인하고 queue에 있던 콜백을 call stack으로 이동시킵니다.</li><li>마침내 콜백함수는&nbsp;<code>Second</code> 를 로그에 찍고 pop됩니다.</li></ol><hr><p>위의 내용을 몰라도 에러 잘 찾고, 효율적으로 코드 작성하는 방법을 알면 크게 상관 없습니다만 엔진의 동작 원리를 알고 접근하면 더 많은 부분을 생각할 수 있으니 꼭 이해하고 넘어가셨으면 좋겠습니다 🤖</p>]]></content:encoded>
            <category>javaScript</category>
            <category>typeScript</category>
        </item>
        <item>
            <title><![CDATA[팀원 외의 사람이 쓴 글]]></title>
            <link>https://your-docusaurus-test-site.com/getcha_frontend_docs/blog/slug</link>
            <guid>slug</guid>
            <pubDate>Sun, 10 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[팀원 외에 다른사람도 글을 쓸 수 있습니다.]]></description>
            <content:encoded><![CDATA[<div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><h2 class="anchor anchorWithStickyNavbar_mojV" id="팀원-외에-다른사람도-글을-쓸-수-있습니다">팀원 외에 다른사람도 글을 쓸 수 있습니다.<a class="hash-link" href="#팀원-외에-다른사람도-글을-쓸-수-있습니다" title="Direct link to heading">​</a></h2></div></div>]]></content:encoded>
            <category>hola</category>
        </item>
        <item>
            <title><![CDATA[리팩토링 계획]]></title>
            <link>https://your-docusaurus-test-site.com/getcha_frontend_docs/blog/long</link>
            <guid>long</guid>
            <pubDate>Thu, 24 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[리팩토링 계획을 만들어봤습니다.]]></description>
            <content:encoded><![CDATA[<p>리팩토링 계획을 만들어봤습니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="방향성">방향성<a class="hash-link" href="#방향성" title="Direct link to heading">​</a></h2><ol><li>한눈에 파악 가능한 <strong>구조</strong> 만들기</li><li>지속가능한 코드 만들기</li></ol><hr><h1>파일 정리</h1><h3 class="anchor anchorWithStickyNavbar_mojV" id="안쓰는-파일-정리">안쓰는 파일 정리<a class="hash-link" href="#안쓰는-파일-정리" title="Direct link to heading">​</a></h3><p>현재 사용하지 않는 파일, 폴더를 삭제합니다.</p><p>추후 사용될 여지가 있는 파일들은 git에 branch로 따로 남겨두면 됩니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="폴더-정리">폴더 정리<a class="hash-link" href="#폴더-정리" title="Direct link to heading">​</a></h2><p>폴더 구조가 한눈에 알아보기 힘들고 일관성이 없어 향후 유지보수를 위해 폴더 이름, 파일구조 컨벤션을 정하고 일괄 변경 작업을 진행하겠습니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="안쓰는-코드-정리">안쓰는 코드 정리<a class="hash-link" href="#안쓰는-코드-정리" title="Direct link to heading">​</a></h2><p>단순 주석이나 코드 내에서도 쓰이지 않는 코드 제거가 필요합니다.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="-하면-좋은-정리">+ 하면 좋은 정리<a class="hash-link" href="#-하면-좋은-정리" title="Direct link to heading">​</a></h3><ol><li>중복 코드 제거</li><li>중복 로직 묶기</li><li>...</li></ol><hr><h1>Component Library</h1><p>getcha-app의 크기가 너무 커서 이를 분리하는 작업이 필요하다고 생각합니다. 제가 생각하는 첫번째 단계는 컴포넌트 라이브러리입니다. 자주 사용하는 컴포넌트를 라이브러리로 묶어서 npm package로 관리하면 관리도 쉽고 일관성도 유지할 수 있으며 방대한 양의 코드를 분리시킬 수 있습니다. 또한 있는지 몰라서 다시 만드는 일이 줄어듭니다. 겟차 프론트엔드 툴킷 정도로 활용되면 좋을 것 같아요.</p><aside>💡 예를 들면 [react-native-element](https://reactnativeelements.com/docs)가 있습니다.</aside><p>현재 프로덕트 디자인 팀에서 디자인 시스템을 구축중에 있습니다. 해당 작업과 연계해서 진행되면 좋을 것 같습니다. 참고하고 계시는 시스템은 <a href="https://socarframe.socar.kr/8bb3aba4a/p/480a5e-introduction" target="_blank" rel="noopener noreferrer">Socar의 디자인 프레임</a>입니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="라이브러리-구조">라이브러리 구조<a class="hash-link" href="#라이브러리-구조" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="getchacomponent">GetchaComponent<a class="hash-link" href="#getchacomponent" title="Direct link to heading">​</a></h3><p>index에서는 공통으로 필요한 데이터들을 선언해두고 가져다 쓰면 좋을 것 같습니다. 예를 들어 환경변수가 아닌 Const 값이나 이벤트 함수같은 부분들은 서비스 의존적이라 조금이라도 변경하려면 다시 배포를 하거나 코드푸시를 해서 버전관리를 어렵게 만드니 이렇게 관리하면 좋지 않을까 생각합니다.</p><p>React App과 Web이 지금처럼 같이 간다면 이 폴더 안에 컴포넌트를 다 넣어도 좋을 것 같은데, 추후 분리가 예정되어있어 아래와 같이 따로 나누는게 좋을 것 같습니다.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="getchacomponentweb">GetchaComponent/web<a class="hash-link" href="#getchacomponentweb" title="Direct link to heading">​</a></h3><p>React 용 Component가 있습니다.</p><p>웹에서만 사용되는 컴포넌트나 웹용 컴포넌트가 정의되어 있습니다.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="getchacomponentapp">GetchaComponent/App<a class="hash-link" href="#getchacomponentapp" title="Direct link to heading">​</a></h3><p>React Native용 Component가 있습니다.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="getchacomponenthooks">GetchaComponent/Hooks<a class="hash-link" href="#getchacomponenthooks" title="Direct link to heading">​</a></h3><p>Getcha에서 공통으로 사용되는 Hook들이 있습니다.</p><p>조금 더 확장해보면 Hooks라는 이름을 Utils같은 이름으로 고쳐서 전역에서 사용하거나 사양될 Context나 HOC 등을 같이 넣어주면 좋을 것 같습니다. util 함수도 같이 들어간다면 좋을 것 같아요.</p><aside>💡 [예시1](https://usehooks.com/), [예시2](https://usehooks-ts.com/)</aside><h3 class="anchor anchorWithStickyNavbar_mojV" id="getcha---">Getcha - ??<a class="hash-link" href="#getcha---" title="Direct link to heading">​</a></h3><p>뭐 더 넣을지 <strong>추천받습니다</strong></p><hr><h3 class="anchor anchorWithStickyNavbar_mojV" id="-frontend-개발용-document-만들기">+ FrontEnd 개발용 Document 만들기<a class="hash-link" href="#-frontend-개발용-document-만들기" title="Direct link to heading">​</a></h3><p>디자인 팀에서는 <a href="https://zeroheight.com/" target="_blank" rel="noopener noreferrer">zeroHeight</a>라는 프레임워크를 사용할 생각인 것 같습니다. 디자인에 특화되어있고, 공통 컴포넌트 및 디자인 시스템에 있어서 피그마를 대체할만한 프레임워크라 생각되어 괜찮은 것 같습니다.</p><p>개발팀에서는 조금 더 활용방법 및 개발에 가져다 쓰는 방식을 고려하여 도큐먼트를 따로 만들 생각입니다. 저희는 <a href="https://docusaurus.io/ko/" target="_blank" rel="noopener noreferrer">도큐사우루스</a>나 <a href="https://www.gitbook.com/" target="_blank" rel="noopener noreferrer">깃북</a>를 활용하면 좋을 것 같습니다.</p><hr><h1>Store</h1><p>현재 Redux, Redux-Saga로 구현되어있는 전역 Store는 크기가 매우 커서 관리가 많이 힘듭니다. Store하나 추가하기 위해 작성해야하는 코드가 많고, 복붙을 많이 해야합니다.</p><p>전역 데이터의 범위를 제한하는 장치도 있어야 한다고 생각합니다. 전역 데이터의 가장 큰 문제는 어디선가 필요에 의해 가져다 쓰고, 지우지 않거나 잘못 가져다 써서 side effect를 발생시키는 것이기 때문입니다.</p><p>데이터 관리 구조 또한 파편화되어있어 클라이언트 내에서 같은 타입 이면서 같은 id인 데이터가 서로 다르게 표기되는 문제가 발생합니다. (예를 들면, 게시글 상세에서 댓글을 쓰고 나와도 리스트 데이터에서 댓글 갯수가 변화가 없는)</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="개선안-다양한-의견이-필요함">개선안 (다양한 의견이 필요함!)<a class="hash-link" href="#개선안-다양한-의견이-필요함" title="Direct link to heading">​</a></h2><p><img loading="lazy" src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0b72db7c-d912-4129-bbbf-1ee7e149b13e/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA_2022-04-20_%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE_1.51.33.png" alt="스크린샷 2022-04-20 오후 1.51.33.png" class="img_E7b_"></p><p>현재 구조처럼 특정 key가 하나의 타입 데이터를 가지는 구조가 아니라 받은 데이터는 타입별로 Store를 만들어 관리합니다. 그리고 데이터를 렌더링할 key는 id값만 가지고 해당 type의 Store의 reference를 받아다 렌더링합니다.</p><p><img loading="lazy" src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/29180ea3-e8e5-4c15-9f1a-d302b3d7f314/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA_2022-04-20_%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE_12.11.20.png" alt="현재의 구조" class="img_E7b_"></p><p>현재의 구조</p><p>변경하게 된다면 아래와 비슷하게 적용될 것입니다.</p><div class="codeBlockContainer_I0IT language-tsx theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-tsx codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Store by Types 구조 예시</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">communities</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">forums</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Store by Render 구조 예시</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bookmarkFeeds</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    page</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">total_contents</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    references</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">forums</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    page</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    references</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">12</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">44</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">555</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>조회수나 추천같은 로직은 간단하게 요청 성공여부만 확인하고 id로 객체를 찾아 고쳐주면 되고 너무 오랬동안 캐시를 조작하면 안되니 적당한 주기로 풀링을 해서 syncronize할 수도 있습니다.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="장점">장점<a class="hash-link" href="#장점" title="Direct link to heading">​</a></h3><ol><li>데이터 파편화를 완벽하게 해결할 수 있다.</li><li>양방향 캐시 적용으로 속도가 많이 올라간다.</li><li>조회수 같이 조금만 바뀌어도 리페칭해야하는 로직을 개선할 수 있다.</li><li>서버 호출을 최소화할 수 있다.</li></ol><h3 class="anchor anchorWithStickyNavbar_mojV" id="단점-or-우려사항">단점 or 우려사항<a class="hash-link" href="#단점-or-우려사항" title="Direct link to heading">​</a></h3><ol><li>테스트를 안해봐서 성능을 보장할 수 없다.</li><li>작업량이 엄청나다</li><li>캐시 직접접근 시 치명적인 버그가 발생할 수 있다.</li></ol><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="react-query---server-state-library">React Query - Server State Library<a class="hash-link" href="#react-query---server-state-library" title="Direct link to heading">​</a></h2><p>클라이언트 스토어와 서버 스토어를 분리시킬 수 있는 프레임워크입니다.</p><p>현재 구조를 복잡하게 만드는 부분 중 하나인 Loading, Error, Data 객체를 각각 생성 &amp; 관리해야하는 문제를 해결해주고, Client에서만 사용하는 Store만 남기고 Server Data State는 전부 React Query로 대체할 수 있습니다.</p><p>Redux 자체가 나온지 오래되었기 때문에 안정적이지만 사용 자체가 불편하고 복잡하다는 단점이 있습니다. 비교적 최근에 나온 가볍고 간단하며 성능좋은 상태관리 프레임워크로 넘어갈 수 있습니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="client-state-libraries">Client State Libraries<a class="hash-link" href="#client-state-libraries" title="Direct link to heading">​</a></h2><p>관리가 쉽고, 과도한 리렌더링 이슈를 해결하는데 목적을 두고 만들어진 라이브러리들입니다.</p><p>Zustand</p><p><a href="https://zustand.surge.sh/" target="_blank" rel="noopener noreferrer">Zustand</a></p><p>Jotai</p><p><a href="https://jotai.org/" target="_blank" rel="noopener noreferrer">Jotai, primitive and flexible state management for React</a></p><hr><h1>typeScript</h1><h2 class="anchor anchorWithStickyNavbar_mojV" id="typescript-기반-컨벤션-결정-및-문서-작성">typeScript 기반 컨벤션 결정 및 문서 작성<a class="hash-link" href="#typescript-기반-컨벤션-결정-및-문서-작성" title="Direct link to heading">​</a></h2><p>typeScript로 전환하기 전에 FrontEnd chapter 내에서의 Consensus가 도출되어야 합니다. 이를 기반으로 가이드 Docs가 만들어지면 일괄 적용하는 방식으로 진행하겠습니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="typescript로-전환">typeScript로 전환<a class="hash-link" href="#typescript로-전환" title="Direct link to heading">​</a></h2><ol><li><p>type 정의</p><p>글로벌 타입, aliasing, 상속관계 등등 여러가지 요소를 고려해야 함.</p></li><li><p>type Guard 선언</p><p>현재 undefined에 map을 돌리거나 undefined에 dot notation으로 접근하며 런타임에 앱이 터지는 사례가 많은데, 이 부분들을 전부 typeGuard로 방어가 가능합니다.</p><div class="codeBlockContainer_I0IT language-tsx theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-tsx codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 이 함수가 true를 리턴하면서 Event 객체임을 보증한다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> isEvent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">unknown</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> event </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">EVENT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword nil" style="color:#00009f">undefined</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">action </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">payload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 이 함수를가 true를 리턴하면 Event 객체 배열임을 보증한다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> isEvents </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">unknown</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> events </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">EVENT</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token known-class-name class-name">Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">every</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">isEvent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></li><li><p>util함수 정리</p><p>현재 유틸함수는 Service 폴더 아래 파일형태로 존재합니다. 따로 묶음이 필요합니다. 유틸함수는 공용 함수이기 때문에 타입을 고려하지 않고 배열, 객체연산 등을 잘못 사용하면 곧바로 앱이 죽습니다. typeScript를 적용하고 주석으로 명확하게 표시해줘야 안전하고 효율적으로 사용할 수 있습니다.</p><table><thead><tr><th>폴더 이름</th><th>함수들 예시</th></tr></thead><tbody><tr><td>nullChecker</td><td>isNull, isBoolean, isArray ...</td></tr><tr><td>numbers</td><td>addCommas, numberWithSuffix ...</td></tr><tr><td>regExp</td><td>emailReg, phoneNumberReg, ...</td></tr></tbody></table></li><li><p>navigation params 정의</p><p>params 또한 오타나 잘못 사용하는 사례에 치명적입니다. 없거나 잘못 받는다면 다른 스크린으로 이동하는 순간 앱이 터지기 때문입니다. Navigation에도 타입을 정의할 수 있으니 이 부분도 적용하는 게 좋겠습니다.</p></li><li><p>뭘 더 할까..</p></li></ol><h1>Test Code &amp; Auto Testing</h1><h2 class="anchor anchorWithStickyNavbar_mojV" id="tddtest-driven-development">TDD(Test Driven Development)<a class="hash-link" href="#tddtest-driven-development" title="Direct link to heading">​</a></h2><p>결론부터 말하면 TDD를 하고싶진 않습니다. 개인적으로 그 작업들은 너무 많은 공수가 들기 때문에 비효율적이라 생각합니다.</p><p>하지만 Runtime에 앱이 죽는 경우를 방지하기 위해 다양한 케이스를 테스트할 수 있는 테스트코드를 템플릿처럼 만들어두고, 복붙 → 변수명 바꾸기 정도로 유지하면 어떨까 합니다.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="auto-testing">Auto Testing<a class="hash-link" href="#auto-testing" title="Direct link to heading">​</a></h2><p>우아한 형제들 기술블로그에서 <a href="https://techblog.woowahan.com/2658/" target="_blank" rel="noopener noreferrer">Appium으로 테스트 자동화를 구축했던 포스트</a>를 본 적 있습니다. 지정된 시나리오대로 빠지는 것 없이 테스트하고 테스트 결과 리포트까지 작성해주면, 테스터는 해당 결과 중 오작동하는 부분만 테스트하면 될 겁니다.</p><p>현재 진행되는 주간 QA도 개발단에서 마무리지을 수 있고, 지금처럼 제한된 시간과 제한된 리소스만 가지고 테스트하기보다 더 많은 시나리오와 세분화된 환경(CPU throttle, Network Speed) 등을 고려해서 테스트할 수 있다고 생각합니다.</p><p>저희 서비스는 간헐적인 버그가 많습니다. 그만큼 다양한 환경과 기기에서 여러번 테스트하는게 안좋은 사용자 경험을 발견에 있어 중요합니다.</p><hr><h1>Functional Programming</h1><p>Pure Function만으로 코드를 작성하는 패러다임입니다. 저희 서비스 코드 내부에도 일부 적용되어 있지만 전반적으로 적용하려면 합의와 동의가 필요합니다.</p><p>함수형 프로그래밍을 적용하면 다음과 같은 이점이 있습니다.</p><ol><li>코드 가독성 상승 (개인차 존재)</li><li>메모리 사용률 감소</li><li>side effect 감소 (참조 무결성 확보)</li></ol><p>단점은 다음과 같습니다.</p><ol><li>기본적으로 사용되는 메소드, 커스터마이징한 함수들을 다 알고 있어야 효과적이다.</li><li>반대로 가독성을 떨어뜨릴 수 있다.
예를 들어 함수 이름을 이상하게 지은 경우</li><li>리액트의 구조와 조금 안맞을 수 있다.
리액트의 경우 props로 받은 데이터나 store 데이터를 직접 접근해서 이를 참조하거나 수정해서 렌더링하는 구조인데, FP에서는 Pure Function은 외부 참조를 불허하기 때문.</li></ol><p>만약 사용하게 된다면, 아래와 같은 함수형 프로그래밍 라이브러리를 하나 정해서 사용하면 좋을 것 같습니다.</p><p><a href="https://ramdajs.com/" target="_blank" rel="noopener noreferrer">Ramda</a></p><p><a href="https://lodash.com/" target="_blank" rel="noopener noreferrer">Lodash</a></p><p><a href="https://underscorejs.org/" target="_blank" rel="noopener noreferrer">Underscore.js</a></p>]]></content:encoded>
            <category>Getcha</category>
            <category>FrontEnd</category>
        </item>
        <item>
            <title><![CDATA[개발 블로그 오픈]]></title>
            <link>https://your-docusaurus-test-site.com/getcha_frontend_docs/blog/mdx-blog-post</link>
            <guid>mdx-blog-post</guid>
            <pubDate>Wed, 02 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</h5></div><div class="admonition-content"><p>아래와 같이 리액트 기반 컴포넌트도 만드실 수 있습니다.</p><div class="codeBlockContainer_I0IT language-js theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-js codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"button clicked!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><button>Click me!</button></div></div>]]></content:encoded>
            <category>blog</category>
        </item>
    </channel>
</rss>